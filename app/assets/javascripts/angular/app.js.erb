//= depend_on_asset "angular/main.html"

var app = angular.module("rcloudApp", ["ngRoute"]);


// Routes
app.config(function ($routeProvider, $httpProvider) {

  $routeProvider
    .when("/", {
      controller: "MainCtrl",
      templateUrl: "<%= asset_path('angular/main.html') %>"
    })
    .when("/account", {
      controller: "AccountCtrl",
      template: "account.html"
    })
    .otherwise({
      redirectTo: "/"
    })

  $httpProvider
    .defaults.headers.common["X-CSRF-Token"] = $("meta[name=csrf-token]").attr("content");
})

app.controller("MainCtrl", function ($scope, $http) {
  $scope.currentUser = null;

  $http.get("/account.json")
    .success(function (user) {
      $scope.currentUser = user;
      console.log("Get current User");
    })

    $scope.signIn = function() {
      alert("sign in function")
    }

    $scope.signOut = function() {
      $http.delete("/users/sign_out.json")
        .success(function(res) {
          $scope.currentUser = null;
        }) 
    }

  $scope.search = function(query) {
    $scope.search.results = [];

    // Rdio Search
    // –––––––––––––––
    R.request({
      method: "search", 
      content: {
        query: query, 
        types: "Track", // changes to find artist, track, or album
        count: 100
      },
      success: function(response) {
        var tracks = response.result.results;
        // add rdio source to identify which player to use
        // add to results array
        for(var i=0; i<tracks.length; i++ ) {
          var track = tracks[i];
          track["source"] = "rdio";
          $scope.search.results.push(track)
        }
        
        // reset form       
        $scope.query = null;
        angular.element("form")[0].reset();
        angular.element("form")[0].blur();
        // update scope
        $scope.$apply();
      },
      error: function(response) {
        console.log("error");
        $(".error").text(response.message);
      }
    });

    // SoundCloud Search
    // –––––––––––––––
    SC.get('/tracks', { q: query, license: 'cc-by-sa' }, function(tracks) {

      for(var i=0; i<tracks.length; i++) {
        var track = tracks[i];
        // add soundcloud key to identify which player to use
        track["source"] = "soundcloud";
        // convert duration to seconds to match rdio
        track.duration = (track.duration / 1000);
        // add to results array
        $scope.search.results.push(track)
      }

      // update scope
      $scope.$apply();
    });


  };

  $scope.closeSearch = function() {
    $scope.search.results = null;
  }

  $scope.play = function(track) {
    console.log(track)
    rcloud.play(track);
  }
});


app.controller("PlayerCtrl", function ($scope) {
  $scope.nowPlaying = {};

  $scope.togglePause = function() {
    R.player.togglePause()
  }
  $scope.previous = function() {
    R.player.previous()
  }
  $scope.next = function() {
    R.player.next()
  }

});

// SoundCloud Init
SC.initialize({
  client_id: 'f3a51baca351723ad612f5318b1be836',
  redirect_uri: 'http://localhost:3000'
});

// Rcloud Player
var RcloudPlayer = function () {
  var self = this
  this.queue = [];
  this.nowPlaying = this.queue[0];
  this.nowPlayingSource = function() {
    // return rdio or soundcloud
    return self.queue[0].source;
  }

  this.play = function (track) {
    // add track to beggining onf queue
    self.queue[0] = track;
    // determine Rdio or SoundCloud player
    if (track.source === "rdio") { 
      alert("Rdio Player")
      R.player.play({source: track.key})
    } else if (track.source === "soundcloud") {
      SC.stream("/tracks/" + track.id, {
        autoPlay: true
      }, function(sound){  
        SC.sound = sound;
        SC.sound.play();
        scPlaying = true;
      });

    }
  }
}

var rcloud = new RcloudPlayer();

// time filter
app.filter('secondsToDateTime', [function() {
    return function(seconds) {
        return new Date(1970, 0, 1).setSeconds(seconds);
    };
}])

