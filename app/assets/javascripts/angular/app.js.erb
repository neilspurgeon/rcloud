var app = angular.module("rcloudApp", ["ngRoute"]);

app.controller("MainCtrl", function ($scope, $http, $interval) {
  $scope.currentUser = null;
  $scope.userLibrary = [];

  $http.get("/account.json")
    .success(function (user) {
      $scope.currentUser = user;
      console.log("Get current User");
  });

  $scope.soundCloudConnect = function() {
    SC.connect(function() {
      SC.get('/me', function(response) {
        var value = SC.accessToken();
        createCookie("accessToken", value, 30);
      });
    });
  };

  var getSoundCloudLibrary = function() {
    var token = getCookie('accessToken');
    SC.get('/me/favorites?oauth_token=' + token, function(response) {
      
      var tracks = response;
      $scope.$apply(function(){
        for(var i=0; i<tracks.length; i++ ) {  
          // grab the data we want and push clean track to lib 
          var track = tracks[i];
          var rcloudTrack = setSoundCloudTrack(track);
          $scope.userLibrary.push(rcloudTrack);
          // for dev purpose: REMOVE
          lib = $scope.userLibrary;
        }
      });  
    });
  };

  var getRdioLibrary = function() {
    if (R.currentUser) {
      R.request({
        method: "getTracksInCollection", 
        content: {
          user: R.currentUser.get("key"), 
          count: 100,
        }, complete: function(response) {
          
          var tracks = response.result;
          $scope.$apply(function(){
            for(var i=0; i<tracks.length; i++ ) {  
              var track = tracks[i];
              var rcloudTrack = setRdioTrack(track);
              $scope.userLibrary.push(rcloudTrack);
              // for dev purpose: REMOVE
              lib = $scope.userLibrary;
            }
          });
        }
      });
    }
  };

  $scope.getLibrary = function() {
    getRdioLibrary();
    getSoundCloudLibrary();
  };  

  $scope.signIn = function() {
    alert();
    R.ready(function() {
      console.log("R Ready");
      R.authenticate();
    });
    
  };

  $scope.signOut = function() {
    $http.delete("/users/sign_out.json")
      .success(function(res) {
        $scope.currentUser = null;
      });
  };

  $scope.search = function(query) {
    $scope.search.results = [];

    // Rdio Search
    // –––––––––––––––
    R.request({
      method: "search", 
      content: {
        query: query, 
        types: "Track", // changes to find artist, track, or album
        count: 100
      },
      success: function(response) {
        var tracks = response.result.results;
        // add rdio source to identify which player to use
        // add to results array
        $scope.$apply(function () {
          for(var i=0; i<tracks.length; i++ ) {
            var track = tracks[i];
            var rcloudTrack = setRdioTrack(track);
            $scope.search.results.push(rcloudTrack);
          }
        });
        
        // reset form       
        $scope.query = null;
        angular.element("form")[0].reset();
        angular.element("form")[0].blur();
        // update scope        
        
      },
      error: function(response) {
        console.log("error");
        $(".error").text(response.message);
      }
    });

    // SoundCloud Search
    // –––––––––––––––
    SC.get('/tracks', { q: query, license: 'cc-by-sa' }, function(tracks) {
      $scope.$apply(function(){
        for(var i=0; i<tracks.length; i++) {
          var track = tracks[i];
          var soundCloudTrack = setSoundCloudTrack(track);
          $scope.search.results.push(soundCloudTrack);
        }
      });

    });
  };

  $scope.closeSearch = function() {
    $scope.search.results = null;
  };

  $scope.currentPosition = 0;
  $scope.playTrack = function(track) {  
    rcloud.stop();  
    rcloud.play(track);
    $scope.nowPlaying = rcloud.queue[0];

    $scope.currentPosition = 0;
    // stop currently running interval
    $interval.cancel($scope.getTime);
    $scope.getTime = $interval(callAtInterval, 1000);
  };

  var callAtInterval = function() {
      console.log("Interval occurred");
      if (rcloud.nowPlayingSource === "rdio") {
        $scope.currentPosition = R.player.position();
      } else if (rcloud.soundCloud && rcloud.nowPlayingSource === "soundCloud") {
        $scope.currentPosition = rcloud.soundCloud._player._html5Audio.currentTime;
      }
  };

  $scope.queue = rcloud.queue;

  $scope.queueTrack = function(track) {
    rcloud.queue.push(track);
  };

  $scope.togglePause = function() {
    rcloud.togglePause();
    
    if (rcloud.playing) {
      // stop currently running interval if playing
      $scope.getTime = $interval(callAtInterval, 1000);
    } else if (rcloud.playing === false){
      // start interval if not playing
      $interval.cancel($scope.getTime);
      
    }
  };

  $scope.previous = function() {
    // R.player.previous();
  };
  $scope.next = function() {
    rcloud.next();
  };

});



// time filter
app.filter('secondsToDateTime', [function() {
    return function(seconds) {
        return new Date(1970, 0, 1).setSeconds(seconds);
    };
}]);

