//= depend_on_asset "angular/main.html"

var app = angular.module("rcloudApp", ["ngRoute"]);

app.controller("MainCtrl", function ($scope, $http) {
  $scope.currentUser = null;

  $http.get("/account.json")
    .success(function (user) {
      $scope.currentUser = user;
      console.log("Get current User");
    });

    $scope.signIn = function() {
      alert("sign in function");
    };

    $scope.signOut = function() {
      $http.delete("/users/sign_out.json")
        .success(function(res) {
          $scope.currentUser = null;
        });
    };

  $scope.search = function(query) {
    $scope.search.results = [];

    // Rdio Search
    // –––––––––––––––
    R.request({
      method: "search", 
      content: {
        query: query, 
        types: "Track", // changes to find artist, track, or album
        count: 100
      },
      success: function(response) {
        var tracks = response.result.results;
        // add rdio source to identify which player to use
        // add to results array
        for(var i=0; i<tracks.length; i++ ) {
          var track = tracks[i];
          track.source = "rdio";
          $scope.search.results.push(track);
        }
        
        // reset form       
        $scope.query = null;
        angular.element("form")[0].reset();
        angular.element("form")[0].blur();
        // update scope
        $scope.$apply();
      },
      error: function(response) {
        console.log("error");
        $(".error").text(response.message);
      }
    });

    // SoundCloud Search
    // –––––––––––––––
    SC.get('/tracks', { q: query, license: 'cc-by-sa' }, function(tracks) {

      for(var i=0; i<tracks.length; i++) {
        var track = tracks[i];
        // add soundCloud key to identify which player to use
        track.source = "soundCloud";
        // convert duration to seconds to match rdio
        track.duration = (track.duration / 1000);
        // add to results array
        $scope.search.results.push(track);
      }

      // update scope
      $scope.$apply();
    });
  };

  $scope.closeSearch = function() {
    $scope.search.results = null;
  };

  $scope.currentPosition = 0;

  $scope.playTrack = function(track) {
    rcloud.play(track);
    $scope.nowPlaying = rcloud.queue[0];
    R.player.on("change:position", function(position) {
      $scope.currentPosition = position;
      $scope.$apply();
      console.log(position);
    });
  };

  $scope.queueTrack = function(track) {
    rcloud.queue.push(track);
  };

  $scope.togglePause = function() {
    rcloud.togglePause();
  };
  $scope.previous = function() {
    R.player.previous();
  };
  $scope.next = function() {
    R.player.next();
  };

});

// time filter
app.filter('secondsToDateTime', [function() {
    return function(seconds) {
        return new Date(1970, 0, 1).setSeconds(seconds);
    };
}]);

